{"version":3,"sources":["apiCall.js","components/SearchWeatherDisplay/SearchWeatherDisplay.jsx","components/WeatherDisplay/WeatherDisplay.jsx","App.js","index.js"],"names":["yesterday","DateTime","now","toSeconds","toFixed","getLastFiveDays","currentDay","parseInt","daysArray","i","push","returnWeatherCall","city","a","previousDays","weatherData","currentWeatherData","historicalWeatherData","axios","get","process","currentData","latitude","data","coord","lat","longitude","lon","Promise","all","map","day","res","response","Loader","className","DayWeatherData","fromSeconds","current","dt","toLocaleString","weekday","temp","SearchWeatherDisplay","input","handleSubmit","handleChange","error","onSubmit","required","pattern","placeholder","id","onChange","e","target","value","type","undefined","sort","b","index","WeatherDisplay","handleReset","name","main","weather","wind","visibility","DATE_MED","onClick","style","textTransform","description","temp_max","feels_like","temp_min","pressure","humidity","speed","require","config","SplitPane","props","left","right","App","useState","setLatitude","setLongitude","setWeatherData","setError","setInput","useEffect","navigator","geolocation","getCurrentPosition","position","coords","historicalData","fetchWeatherData","preventDefault","newData","status","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59989c27.chunk.js","sourcesContent":["import {DateTime} from 'luxon';\nimport axios from 'axios';\n\nconst yesterday = DateTime.now().toSeconds().toFixed(0) - 86400;\n\nconst getLastFiveDays = (yesterday) => {\n    let currentDay = parseInt(yesterday);\n    const daysArray = []\n    for(let i = 0; i < 5; i++){\n      daysArray.push(currentDay)\n      currentDay -= 86400\n    }\n    return daysArray;\n};\n  \n\nexport const returnWeatherCall = async (city) => {\n    const previousDays = getLastFiveDays(yesterday)\n    let weatherData = { \n        currentWeatherData: [], \n        historicalWeatherData: [],\n    };\n    try {\n        const currentData = await axios.get(`${process.env.REACT_APP_URL}/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_API_KEY}`)\n        const latitude = currentData.data.coord.lat;\n        const longitude = currentData.data.coord.lon;\n\n        weatherData.currentWeatherData = currentData.data;\n        weatherData.historicalWeatherData = await Promise.all(previousDays.map(async (day, i) => {\n            const res = await axios.get(`${process.env.REACT_APP_URL}/onecall/timemachine?lat=${latitude}&lon=${longitude}&units=metric&dt=${day}&appid=${process.env.REACT_APP_API_KEY}`);\n            return res.data\n        }));\n    }catch(err){\n        return err.response\n    }\n    return weatherData\n}","import { DateTime } from 'luxon';\nimport './styles.scss';\n\nconst Loader = () => {\n  return <span className=\"loading\"></span>\n};\n\nconst DayWeatherData = ({day}) => {\n  return(\n    <li>\n      <div className=\"previous-day-weather\">\n        <div className=\"date-container\">\n          <span>{DateTime.fromSeconds(day.current.dt).toLocaleString({day: 'numeric'})}</span>\n          <span>{DateTime.fromSeconds(day.current.dt).toLocaleString({weekday: 'long'})}</span>\n        </div>\n        <span>{day.current.temp.toFixed(0)}&#176;C</span>\n      </div>\n    </li>\n  )\n}\nexport default function SearchWeatherDisplay({ input, handleSubmit, handleChange, historicalWeatherData, error, ...otherProps }) {\n  return (\n      <>\n          <form className=\"search-form\" onSubmit={handleSubmit}>\n              <input\n                  required\n                  pattern=\"[a-zA-Z]+\" \n                  placeholder=\"Search a location\" \n                  id=\"search-input\" \n                  onChange={(e) => handleChange(e.target.value)}\n              />\n              <input \n                  type=\"submit\" \n                  value=\"Search\" \n                  id=\"submit-btn\"\n              />\n          </form>\n          {error === true && (\n            <div className=\"error-container\">\n              <h4>City not found</h4>\n            </div>\n          )}\n          <h1>Weather.IO</h1>\n          \n          <div className=\"previous-weather-container\">\n            <p>Past 5 Days</p>\n            <hr/>\n            <ul>\n              {historicalWeatherData !== undefined ? \n              historicalWeatherData\n              .sort((a,b) => a.index - b.index)\n              .map((day, i) => {\n                return <DayWeatherData index={i} key={i} day={day}/>\n              })\n              :  <Loader/>\n              }\n            </ul>\n          </div>\n      </>\n  )\n};","import { DateTime } from 'luxon';\nimport './styles.scss';\n\nconst Loader = () => {\n  return <span className=\"loading\"></span>\n};\n\nexport default function WeatherDisplay({currentWeatherData, handleReset, ...otherProps}) {\n  const { name, main, weather, wind, visibility } = currentWeatherData;\n    return (\n          <>\n            <div className=\"title-container\">\n              <div className=\"title-top-container\">\n                <p>{DateTime.now().toLocaleString(DateTime.DATE_MED)}</p>\n                <button className=\"reset-btn\" onClick={handleReset}>Reset</button>\n              </div>\n              <h1>{name ? name : <Loader/>}</h1>\n            </div>\n\n            <div className=\"center-weather-info\">\n              <h1>{!main ? <Loader/> : main.temp.toFixed(0)}&#176;C</h1>\n              <p style={{textTransform: \"capitalize\"}}>{!weather ? <Loader/> : weather[0].description}</p>\n              <ul>\n                <li>High. {!main ? <Loader/> : main.temp_max.toFixed(0)}&#176;C</li>\n                <li>Feels Like {!main ? <Loader/> : main.feels_like.toFixed(0)}&#176;C</li>\n                <li>Low. {!main ? <Loader/> : main.temp_min.toFixed(0)}&#176;C</li>\n              </ul>\n            </div>\n\n            <div className=\"bottom-weather-info\">\n              <ul>\n                <li>\n                  <h5>Pressure</h5>\n                  <span>{!main ? <Loader/> : main.pressure} MB</span>\n                </li>\n                <li>\n                  <h5>Humidity</h5>\n                  <span>{!main ? <Loader/> : main.humidity} %</span>\n                </li>\n                <li>\n                  <h5>Wind</h5>\n                  <span>{!wind ? <Loader/> : wind.speed} km/h</span>\n                </li>\n                <li>\n                  <h5>Visibility</h5>\n                  <span>{!visibility? <Loader/> : parseInt(visibility)} km</span>\n                </li>\n              </ul>\n            </div>\n          </>\n    )\n}\n","import { DateTime } from 'luxon';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nimport { returnWeatherCall } from './apiCall';\nimport SearchWeatherDisplay from './components/SearchWeatherDisplay/SearchWeatherDisplay';\nimport WeatherDisplay from './components/WeatherDisplay/WeatherDisplay';\nrequire('dotenv').config();\n\nconst getLastFiveDays = (yesterday) => {\n  let currentDay = parseInt(yesterday);\n  const daysArray = []\n  for(let i = 0; i < 5; i++){\n    daysArray.push(currentDay)\n    currentDay -= 86400\n  }\n  return daysArray;\n};\n\nfunction SplitPane(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"container-left\">\n        {props.left}\n      </div>\n      <div className=\"container-right\">\n        {props.right}\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const yesterday = DateTime.now().toSeconds().toFixed(0) - 86400;\n  const [previousDays, setPreviousDays] = useState(getLastFiveDays(yesterday))\n  const [latitude, setLatitude] = useState([]);\n  const [longitude, setLongitude] = useState([]);\n  const [weatherData, setWeatherData] = useState({ \n    currentWeatherData: [], \n    historicalWeatherData: [],\n  });\n  const [error, setError] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLatitude(position.coords.latitude)\n        setLongitude(position.coords.longitude)\n      });\n\n      const currentData = await axios.get(`${process.env.REACT_APP_URL}/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${process.env.REACT_APP_API_KEY}`);\n      const historicalData = await Promise.all(previousDays.map(async (day, i) => {\n        const res = await axios.get(`${process.env.REACT_APP_URL}/onecall/timemachine?lat=${latitude}&lon=${longitude}&units=metric&dt=${day}&appid=${process.env.REACT_APP_API_KEY}`);\n        return res.data\n      }))\n\n      setWeatherData({ currentWeatherData: currentData.data, historicalWeatherData: historicalData})\n    }\n    fetchWeatherData();\n  },[latitude, longitude]);\n\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      const city = input;\n      const newData = await returnWeatherCall(city);\n      if(newData.status === 404){\n        setError(true)\n        return\n      }else {\n        setError(false)\n        setWeatherData({currentWeatherData: newData.currentWeatherData, historicalWeatherData: newData.historicalWeatherData})\n      }\n     \n  };\n\n  //Not the best way to handle clearing state but implemented due to time constraints\n  const handleReset = () => {\n    window.location.reload()\n  };\n\n  const handleChange = (e) => {\n    setInput(e)\n  };\n\n  return (\n    <div className=\"app\">\n      <SplitPane\n        left={\n          <WeatherDisplay\n            currentWeatherData={weatherData.currentWeatherData}\n            handleReset={handleReset}\n          />\n        }\n        right={\n          (\n          <SearchWeatherDisplay\n            input={input}\n            historicalWeatherData={weatherData.historicalWeatherData}\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            error={error}\n          /> \n          )}\n      />\n    </div>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}